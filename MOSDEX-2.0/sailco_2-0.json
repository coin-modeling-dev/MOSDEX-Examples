{
  "SYNTAX": "MOSDEX/MOSDEX v2-0/MOSDEXSchemaV2-0.json",
  "MODULES": [
    {
      "NAME": "sailco",
      "CLASS": "MODULE",
      "KIND": "MODEL",
      "HEADING": {
        "DESCRIPTION": [
          "Inventory problem with lagged decision variables"
        ],
        "VERSION": [ "2-0" ],
        "REFERENCE": [
          "https://www.ibm.com/support/knowledgecenter/SSSA5P_12.7.1/ilog.odms.ide.help/OPL_Studio/opllanguser/topics/opl_languser_app_areas_pwl_inventory.html"
        ],
        "AUTHOR": [
          "Jeremy A. Bloom (jeremyblmca@gmail.com)"
        ],
        "NOTICES": [
          "Copyright 2019 Jeremy A. Bloom"
        ],
        "MATH": [
          "minimize",
          "sum( t in Periods ) ( RegularCost * Regular[t] ) +",
          "sum( t in Periods ) ( ExtraCost * Extra[t] ) +",
          "sum( t in Periods ) ( InventoryCost * Inventory[t] );",
          "subject to {",
          "forall( t in Periods )",
          "ctCapacity[t]: Regular[t] <= Capacity;",
          "forall( t in Periods )",
          "ctBoat[t]:",
          "if (t>1)",
          "Regular[t] + Extra[t] + Inventory[t-1] - Inventory[t] == Demand[t];",
          "else //t=1",
          "Regular[t] + Extra[t] - Inventory[t] == Demand[t] - InitialInventory;",
          "}"
        ]
      },
      "TABLES": [
        {
          "NAME": "periods",
          "CLASS": "DATA",
          "KIND": "INPUT",
          "SCHEMA": {
            "FIELDS": [ "period" ],
            "TYPES": [ "INTEGER" ]
          },
          "INSTANCE": [
            [ 1 ],
            [ 2 ],
            [ 3 ],
            [ 4 ]
          ]
        },
        {
          "NAME": "demands",
          "CLASS": "DATA",
          "KIND": "INPUT",
          "SCHEMA": {
            "FIELDS": [ "period",   "demand" ],
            "TYPES": [  "INTEGER",  "DOUBLE" ]
          },
          "INSTANCE": [
            [           1,          40.0 ],
            [           2,          60.0 ],
            [           3,          75.0 ],
            [           4,          25.0 ]
          ]
        },
        {
          "NAME": "parameters",
          "CLASS": "DATA",
          "KIND": "INPUT",
          "SCHEMA": {
            "FIELDS": [ "regularCost", "extraCost", "capacity", "initialInventory", "inventoryCost" ],
            "TYPES": [  "DOUBLE",      "DOUBLE",    "DOUBLE",   "DOUBLE",           "DOUBLE" ]
          },
          "INSTANCE": [
            [           400.0,         450.0,       40.0,       10.0,               20.0 ]
          ]
        },
        {
          "NAME": "regular",
          "CLASS": "VARIABLE",
          "KIND": "CONTINUOUS",
          "QUERY": {
            "SELECT": [
              "'regular' AS Name                        -- STRING",
              "period                                   -- INTEGER",
              "CONCAT('regular','_', period) AS Column  -- STRING",
              "CAST(0.0 AS DOUBLE) AS LowerBound        -- DOUBLE",
              "CAST('Infinity' AS DOUBLE) AS UpperBound -- DOUBLE",
              "'PrimalValue(Column)' AS value           -- DOUBLE_FUNCTION"
            ],
            "FROM": [ "periods" ]
          }
        },
        {
          "NAME": "extra",
          "CLASS": "VARIABLE",
          "KIND": "CONTINUOUS",
          "QUERY": {
            "SELECT": [
              "'extra' AS Name                          -- STRING",
              "period                                   -- INTEGER",
              "CONCAT('extra','_', period) AS Column    -- STRING",
              "CAST(0.0 AS DOUBLE) AS LowerBound        -- DOUBLE",
              "CAST('Infinity' AS DOUBLE) AS UpperBound -- DOUBLE",
              "'PrimalValue(Column)' AS value           -- DOUBLE_FUNCTION"
            ],
            "FROM": [ "periods" ]
          }
        },
        {
          "NAME": "inventory",
          "CLASS": "VARIABLE",
          "KIND": "CONTINUOUS",
          "QUERY": {
            "SELECT": [
              "'inventory' AS Name                        -- STRING",
              "period                                     -- INTEGER",
              "CONCAT('inventory','_', period) AS Column  -- STRING",
              "CAST(0.0 AS DOUBLE) AS LowerBound          -- DOUBLE",
              "CAST('Infinity' AS DOUBLE) AS UpperBound   -- DOUBLE",
              "'PrimalValue(Column)' AS value             -- DOUBLE_FUNCTION"
            ],
            "FROM": [ "periods" ]
          }
        },
        {
          "NAME": "ctCapacity",
          "CLASS": "CONSTRAINT",
          "KIND": "LINEAR",
          "QUERY": {
            "SELECT": [
              "'ctCapacity' AS Name                     -- STRING",
              "period                                   -- INTEGER",
              "CONCAT('ctCapacity','_', period) AS Row  -- STRING",
              "'<=' AS Sense                            -- STRING",
              "parameters.capacity AS RHS               -- DOUBLE",
              "'DualValue(Row)' AS dual                -- DOUBLE_FUNCTION"
            ],
            "FROM": [ "periods", "parameters"]
          }
        },
        {
          "NAME": "ctBoat",
          "CLASS": "CONSTRAINT",
          "KIND": "LINEAR",
          "QUERY": {
            "SELECT": [
              "'ctBoat' AS Name                             -- STRING",
              "periods.period AS period                     -- INTEGER",
              "CONCAT('ctBoat','_', periods.period) AS Row  -- STRING",
              "'==' AS Sense                                -- STRING",
              "demands.demand AS RHS                        -- DOUBLE",
              "'DualValue(Row)' AS dual                    -- DOUBLE_FUNCTION"
            ],
            "FROM": [ "periods" ],
            "JOIN": ["demands"], "ON": ["periods.period = demands.period"],
            "WHERE": [ "periods.period >1" ]
          }
        },
        {
          "NAME": "ctBoat_1",
          "CLASS": "CONSTRAINT",
          "KIND": "LINEAR",
          "QUERY": {
            "SELECT": [
              "'ctBoat_1' AS Name                                     -- STRING",
              "periods.period AS period                               -- INTEGER",
              "'ctBoat_1' AS Row                                      -- STRING",
              "'==' AS Sense                                          -- STRING",
              "(demands.demand - parameters.initialInventory) AS RHS  -- DOUBLE",
              "'DualValue(Row)' AS dual                               -- DOUBLE_FUNCTION"
            ],
            "FROM": [ "periods", "parameters"],
            "JOIN": ["demands"], "ON": ["periods.period = demands.period"],
            "WHERE": [ "periods.period ==1" ]
          }
        },
        {
          "NAME": "totalCost",
          "CLASS": "OBJECTIVE",
          "KIND": "LINEAR",
          "SCHEMA": {
            "FIELDS": [ "Name",       "Row",      "Constant", "Sense",    "Value" ],
            "TYPES": [  "STRING",     "STRING",   "DOUBLE",   "STRING",   "DOUBLE_FUNCTION" ]
          },
          "INSTANCE": [
            [           "totalCost", "totalCost",  0.0,       "MINIMIZE", "ObjectiveValue(Row)" ]
          ]
        },
        {
          "NAME": "ctCapacity_regular",
          "CLASS": "TERM",
          "KIND": "LINEAR",
          "QUERY": {
            "SELECT": [
              "CONCAT('ctCapacity','_', period) AS Row  -- STRING",
              "CONCAT('regular','_', period) AS Column  -- STRING",
              "CAST(1.0 AS DOUBLE) AS Coefficient       -- DOUBLE"
            ],
            "FROM": [ "periods" ]
          }
        },
        {
          "NAME": "ctBoat_regular",
          "CLASS": "TERM",
          "KIND": "LINEAR",
          "QUERY": {
            "SELECT": [
              "CONCAT('ctBoat','_', period) AS Row      -- STRING",
              "CONCAT('regular','_', period) AS Column  -- STRING",
              "CAST(1.0 AS DOUBLE) AS Coefficient       -- DOUBLE"
            ],
            "FROM": [ "periods" ]
          }
        },
        {
          "NAME": "ctBoat_extra",
          "CLASS": "TERM",
          "KIND": "LINEAR",
          "QUERY": {
            "SELECT": [
              "CONCAT('ctBoat','_', period) AS Row    -- STRING",
              "CONCAT('extra','_', period) AS Column  -- STRING",
              "CAST(1.0 AS DOUBLE) AS Coefficient     -- DOUBLE"
            ],
            "FROM": [ "periods" ]
          }
        },
        {
          "NAME": "ctBoat_inventory",
          "CLASS": "TERM",
          "KIND": "LINEAR",
          "QUERY": {
            "SELECT": [
              "CONCAT('ctBoat','_', period) AS Row        -- STRING",
              "CONCAT('inventory','_', period) AS Column  -- STRING",
              "CAST(-1.0 AS DOUBLE) AS Coefficient        -- DOUBLE"
            ],
            "FROM": [ "periods" ]
          }
        },
        {
          "NAME": "ctBoat_lagged_inventory",
          "CLASS": "TERM",
          "KIND": "LINEAR",
          "QUERY": {
            "SELECT": [
              "CONCAT('ctBoat','_', period) AS Row            -- STRING",
              "CONCAT('inventory','_', (period-1)) AS Column  -- STRING",
              "CAST(1.0 AS DOUBLE) AS Coefficient             -- DOUBLE"
            ],
            "FROM": [ "periods" ],
            "WHERE": [ "periods.period > 1" ]
          }
        },
        {
          "NAME": "totalCost_regular",
          "CLASS": "TERM",
          "KIND": "LINEAR",
          "QUERY": {
            "SELECT": [
              "CONCAT('totalCost') AS Row               -- STRING",
              "CONCAT('regular','_', period) AS Column  -- STRING",
              "parameters.regularCost AS Coefficient    -- DOUBLE"
            ],
            "FROM": [ "periods", "parameters" ]
          }
        },
        {
          "NAME": "totalCost_extra",
          "CLASS": "TERM",
          "KIND": "LINEAR",
          "QUERY": {
            "SELECT": [
              "CONCAT('totalCost') AS Row               -- STRING",
              "CONCAT('extra','_', period) AS Column  -- STRING",
              "parameters.extraCost AS Coefficient    -- DOUBLE"
            ],
            "FROM": [ "periods", "parameters" ]
          }
        },
        {
          "NAME": "totalCost_inventory",
          "CLASS": "TERM",
          "KIND": "LINEAR",
          "QUERY": {
            "SELECT": [
              "CONCAT('totalCost') AS Row               -- STRING",
              "CONCAT('inventory','_', period) AS Column  -- STRING",
              "parameters.inventoryCost AS Coefficient    -- DOUBLE"
            ],
            "FROM": [ "periods", "parameters" ]
          }
        },
        {
          "NAME": "production",
          "CLASS": "DATA",
          "KIND": "OUTPUT",
          "SCHEMA": {
            "FIELDS": [ "period", "regular", "extra", "inventory", "marginalCapacityValue" ],
            "TYPES": [ "INTEGER", "DOUBLE", "DOUBLE", "DOUBLE", "DOUBLE" ]
          },
          "QUERY": {
            "SELECT": [
              "periods.period AS period",
              "regular.Value AS regular",
              "extra.Value AS extra",
              "inventory.Value AS inventory",
              "ctCapacity.dual AS marginalCapacityValue"
            ],
            "FROM": [ "periods" ],
            "JOIN": [ "regular" ], "USING": [ "(period)" ],
            "JOIN#2": [ "extra" ], "USING#2": [ "(period)" ],
            "JOIN#3": [ "inventory" ], "USING#3": [ "(period)" ],
            "JOIN#4": [ "ctCapacity" ], "USING#4": [ "(period)" ]
          }
        }
      ]
    }
  ]
}
