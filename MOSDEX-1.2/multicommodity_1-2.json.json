{
  "SYNTAX": "MOSDEX/MOSDEX v1-2/MOSDEXSchemaV1-2.json",
  "multicommodity": {
    "CLASS": "PROBLEM",
    "HEADING": {
      "DESCRIPTION": [
        "multi-commodity transshipment model in extensive form",
        "MOSDEX 1-2 Syntax"
      ],
      "VERSION": ["1-2"],
      "REFERENCE": ["https://ampl.com/BOOK/EXAMPLES/EXAMPLES2/net1.mod"],
      "AUTHOR": ["Jeremy A. Bloom (jeremyblmca@gmail.com)"],
      "NOTICES": ["Copyright Â© 2019 Jeremy A. Bloom"],
      "MATH": [
        "var Ship {(i,j) in LINKS, p in PRODUCTS} >= 0]; # packages to be shipped",
        "var z {p in PRODUCTS};                          # shipping cost",
        "minimize TotalCost: sum {p in PRODUCTS} z[p];",
        "subject to",
        "ShippingCost{p in PRODUCTS}: ",
          "z[p] = sum {(i,j) in LINKS} cost[i,j] * Ship[i,j,p];",
          "Balance {k in CITIES, p in PRODUCTS}: ",
            "sum {(k,j) in LINKS} Ship[k,j,p] - sum {(i,k) in LINKS} Ship[i,k,p] = supply[k,p] - demand[k,p];",
          "Capacity {(i,j) in LINKS}:",
            "sum {p in PRODUCTS} Ship[i,j,p] <= capacity[i,j]"
      ]
    },
    "products": {
      "CLASS": "DATA",
      "TYPE": "INPUT",
      "SCHEMA": {
        "product": "STRING"
      },
      "INSTANCE":[
        ["towels"],
        ["wipes"],
        ["tissues"],
        ["bags"]
      ]
    },
    "cities": {
      "CLASS": "DATA",
      "TYPE": "INPUT",
      "SCHEMA": {
        "city": "STRING"
      },
      "INSTANCE": [
        ["PITT"],
        ["NE"  ],
        ["SE"  ],
        ["BOS" ],
        ["EWR" ],
        ["BWI" ],
        ["ATL" ],
        ["MCO" ]
      ]
    },
    "supplies": {
      "CLASS": "DATA",
      "TYPE": "INPUT",
      "SCHEMA": {
        "city": "STRING",
        "product": "STRING",
        "supply": "DOUBLE",
        "demand": "DOUBLE"
      },
      "FIELDS": [
            "city", "product",  "supply",  "demand"],
      "INSTANCE": [
        [   "PITT", "towels",   450.0,     0.0    ],
        [   "NE",   "towels",   0.0,       0.0    ],
        [   "SE",   "towels",   0.0,       90.0   ],
        [   "BOS",  "towels",   0.0,       120.0  ],
        [   "EWR",  "towels",   0.0,       120.0  ],
        [   "BWI",  "towels",   0.0,       70.0   ],
        [   "ATL",  "towels",   0.0,       50.0   ],
        [   "MCO",  "towels",   0.0,       0.0    ],
        [   "PITT", "wipes",    450.0,     0.0    ],
        [   "NE",   "wipes",    0.0,       0.0    ],
        [   "SE",   "wipes",    0.0,       0.0    ],
        [   "BOS",  "wipes",    0.0,       90.0   ],
        [   "EWR",  "wipes",    0.0,       120.0  ],
        [   "BWI",  "wipes",    0.0,       120.0  ],
        [   "ATL",  "wipes",    0.0,       70.0   ],
        [   "MCO",  "wipes",    0.0,       50.0   ],
        [   "PITT", "tissues",  450.0,     0.0    ],
        [   "NE",   "tissues",  0.0,       0.0    ],
        [   "SE",   "tissues",  0.0,       0.0    ],
        [   "BOS",  "tissues",  0.0,       90.0   ],
        [   "EWR",  "tissues",  0.0,       120.0  ],
        [   "BWI",  "tissues",  0.0,       120.0  ],
        [   "ATL",  "tissues",  0.0,       70.0   ],
        [   "MCO",  "tissues",  0.0,       50.0   ],
        [   "PITT", "bags",     0.0,       0.0    ],
        [   "NE",   "bags",     0.0,       0.0    ],
        [   "SE",   "bags",     0.0,       90.0   ],
        [   "BOS",  "bags",     0.0,       120.0  ],
        [   "EWR",  "bags",     0.0,       120.0  ],
        [   "BWI",  "bags",     0.0,       70.0   ],
        [   "ATL",  "bags",     0.0,       50.0   ],
        [   "MCO",  "bags",     450.0,     0.0    ]
     ]
    },
    "links": {
      "CLASS": "DATA",
      "TYPE": "INPUT",
      "SCHEMA": {
        "origin": "STRING",
        "destination": "STRING",
        "cost": "DOUBLE",
        "capacity": "DOUBLE"
      },
      "FIELDS": [
          "origin",  "destination",  "cost", "capacity"],
      "INSTANCE": [
        [ "PITT",    "NE",           2.5,    250.0     ],
        [ "PITT",    "SE",           3.5,    250.0     ],
        [ "NE",      "BOS",          1.7,    100.0     ],
        [ "NE",      "EWR",          0.7,    100.0     ],
        [ "NE",      "BWI",          1.3,    100.0     ],
        [ "SE",      "EWR",          1.3,    100.0     ],
        [ "SE",      "BWI",          0.8,    100.0     ],
        [ "SE",      "ATL",          0.2,    100.0     ],
        [ "SE",      "MCO",          2.1,    100.0     ]
      ]
    },
    "ship": {
      "CLASS": "VARIABLE",
      "TYPE": "CONTINUOUS",
      "RECIPE": [
        {"DIRECTIVE": ["SELECT"], "PREDICATE": [
          "'ship' AS Name",
          "'CONTINUOUS' AS Type",
          "links.origin AS origin",
          "links.destination AS destination",
          "products.product AS product",
          "CONCAT('ship','_', origin, '_', destination, '_', product) AS Column",
          "0.0 AS LowerBound",
          "'infinity' AS UpperBound",
          "NULL AS Value"]
        },
        {"DIRECTIVE": ["FROM"], "PREDICATE": ["links"]},
        {"DIRECTIVE": ["CROSS JOIN"], "PREDICATE": ["products"]}
      ]
    },
    "capacity": {
      "CLASS": "CONSTRAINT",
      "TYPE": "LINEAR",
      "RECIPE": [
        {"DIRECTIVE": ["SELECT"], "PREDICATE": [
          "'capacity' AS Name",
          "'LINEAR' AS Type",
          "origin",
          "destination",
          "CONCAT('capacity','_',origin,'_',destination) AS Row",
          "'LE' AS Sense",
          "capacity AS RHS"]
        },
        {"DIRECTIVE": ["FROM"], "PREDICATE": ["links"]}
      ]
   },
    "capacity_ship": {
      "CLASS": "TERM",
      "TYPE": "LINEAR",
      "RECIPE": [
        {"DIRECTIVE": ["SELECT"], "PREDICATE": [
          "'LINEAR' AS Type",
          "capacity.Row AS Row",
          "ship.Column AS Column",
          "1.0 AS Entry"]
        },
        {"DIRECTIVE": ["FROM"], "PREDICATE": ["capacity"]},
        {"DIRECTIVE": ["JOIN"], "PREDICATE": ["ship"]}, {"DIRECTIVE": ["USING"], "PREDICATE": ["(origin, destination)"]}
      ]
    },
    "balance": {
      "CLASS": "CONSTRAINT",
      "TYPE": "LINEAR",
      "RECIPE": [
        {"DIRECTIVE": ["SELECT"], "PREDICATE": [
          "'balance' AS Name",
          "'LINEAR' AS Type",
          "cities.city AS city",
          "products.product AS product",
          "CONCAT('balance','_', city,'_', product) AS Row",
          "'EQ' AS Sense",
          "(cities.supply-cities.demand) AS RHS"]
        },
        {"DIRECTIVE": ["FROM"], "PREDICATE": ["cities"]},
        {"DIRECTIVE": ["CROSS JOIN"], "PREDICATE": ["products"]}
      ]
    },
    "balance_shipFrom": {
      "CLASS": "TERM",
      "TYPE": "LINEAR",
      "RECIPE": [
        {"DIRECTIVE": ["SELECT"], "PREDICATE": [
          "'LINEAR' AS Type",
          "balance.Row AS Row",
          "ship.Column AS Column",
          "1.0 AS Entry"]
        },
        {"DIRECTIVE": ["FROM"], "PREDICATE": ["balance"]},
        {"DIRECTIVE": ["JOIN"], "PREDICATE": ["ship"]}, {"DIRECTIVE": ["ON"], "PREDICATE": ["(balance.city == ship.origin)"]}
      ]
    },
    "balance_shipTo": {
      "CLASS": "TERM",
      "TYPE": "LINEAR",
      "RECIPE": [
        {"DIRECTIVE": ["SELECT"], "PREDICATE": [
          "'LINEAR' AS Type",
          "balance.Row AS Row",
          "ship.Column AS Column",
          "-1.0 AS Entry"]
        },
         {"DIRECTIVE": ["FROM"], "PREDICATE": ["balance", "ship"]},
        {"DIRECTIVE": ["JOIN"], "PREDICATE": ["ship"]}, {"DIRECTIVE": ["ON"], "PREDICATE": ["(balance.city == ship.destination)"]}
      ]
    },
    "z": {
      "CLASS": "VARIABLE",
      "TYPE": "CONTINUOUS",
      "RECIPE": [
        {"DIRECTIVE": ["SELECT"], "PREDICATE": [
          "'z' AS Name",
          "'CONTINUOUS' AS Type",
          "product",
          "CONCAT('z','_', product) AS Column",
          "0.0 AS LowerBound",
          "'infinity' AS UpperBound",
          "NULL AS Value"]
        },
        {"DIRECTIVE": ["FROM"], "PREDICATE": ["products"]}
      ]
    },
    "ShippingCost": {
      "CLASS": "CONSTRAINT",
      "TYPE": "LINEAR",
      "RECIPE": [
        {"DIRECTIVE": ["SELECT"], "PREDICATE": [
          "'ShippingCost' AS Name",
          "'LINEAR' AS Type",
          "product",
          "CONCAT('ShippingCost','_',product) AS Row",
          "'EQ' AS Sense",
          "0.0 AS RHS"]
        },
        {"DIRECTIVE": ["FROM"], "PREDICATE": ["products"]}
      ]
    },
    "ShippingCost_ship": {
      "CLASS": "TERM",
      "TYPE": "LINEAR",
      "RECIPE": [
        {"DIRECTIVE": ["SELECT"], "PREDICATE": [
          "'LINEAR' AS Type",
          "ShippingCost.Row AS Row",
          "ship.Column AS Column",
          "links.cost AS Entry"]
        },
        {"DIRECTIVE": ["FROM"], "PREDICATE": ["ShippingCost"]},
        {"DIRECTIVE": ["JOIN"], "PREDICATE": ["ship"]},  {"DIRECTIVE": ["USING"], "PREDICATE": ["product"]},
        {"DIRECTIVE": ["JOIN"], "PREDICATE": ["links"]}, {"DIRECTIVE": ["USING"], "PREDICATE": ["(origin, destination)"]}
      ]
    },
    "ShippingCost_z": {
      "CLASS": "TERM",
      "TYPE": "LINEAR",
      "RECIPE": [
        {"DIRECTIVE": ["SELECT"], "PREDICATE": [
          "'LINEAR' AS Type",
          "ShippingCost.Row AS Row",
          "z.Column AS Column",
          "-1.0 AS Entry"]
        },
        {"DIRECTIVE": ["FROM"], "PREDICATE": ["ShippingCost"]},
        {"DIRECTIVE": ["JOIN"], "PREDICATE": ["z"]}, {"DIRECTIVE": ["USING"], "PREDICATE": ["product"]}
      ]
    },
    "totalCost": {
      "CLASS": "OBJECTIVE",
      "TYPE": "LINEAR",
      "SINGLETON": {
        "Name":"totalCost",
        "Row": "totalCost",
        "Type": "LINEAR",
        "Constant": 0.0,
        "Sense": "MINIMIZE",
        "Value": null
      }
    },
    "total_z": {
      "CLASS": "TERM",
      "TYPE": "LINEAR",
      "RECIPE": [
        {"DIRECTIVE": ["SELECT"], "PREDICATE": [
          "'LINEAR' AS Type",
          "totalCost.Row AS Row",
          "z.Column AS Column",
          "1.0 AS Entry"]
        },
        {"DIRECTIVE": ["FROM"], "PREDICATE": ["totalCost"]},
        {"DIRECTIVE": ["JOIN"], "PREDICATE": ["z"]}
      ]
    },
    "shipments": {
      "CLASS": "DATA",
      "TYPE": "OUTPUT",
      "RECIPE": [
        {"DIRECTIVE": ["SELECT"], "PREDICATE": ["origin", "destination", "product", "Value AS shipment"]},
        {"DIRECTIVE": ["FROM"], "PREDICATE": ["ship"]}
      ]
    },
    "objective": {
      "CLASS": "DATA",
      "TYPE": "OUTPUT",
      "RECIPE": [
        {"DIRECTIVE": ["SELECT"], "PREDICATE": ["Value AS TotalCost"]},
        {"DIRECTIVE": ["FROM"], "PREDICATE": ["totalCost"]}
      ]
    }
  }
}